decks:
  - device_type: "Stream Deck Neo"
    pages:
      - name: "Page 1"
        buttons:
          0:
            title_text:
              text: "AI\nC++"
              font_size: 28
            action:
              type: "type_text"
              text: |
                - Respond only with code for the question. Do not add comments. 
                - Do not add description. Do not add example setup logic. 
                - Do not write type definitions unless explicitly required to for the answer. 
                - Provide code only for the requested functionality. Use type annotations. 
                - Apply this requirement to all subsequent messages unless instructed otherwise. 
                - If there is no acceptable answer to the request, indicate this. 
                - When formatting values to string, use std::format. 
                - If necessary solution might use boost libraries and range-v3 library. 
                - NEVER use prefix/postfix notation for variable and member names (like `m_field` or `field_` over regular `field`).
                - ALWAYS Use `{}` syntax for object construction and class initializer lists, use designated field initializers when field names are known.
                - ALWAYS Use `int` instead of `size_t` for size-related operations, method and loop iteration.
                - ALWAYS Always use comparison operators going in the same direction, `<` and `<=`, never use `>` and `>=` compare operators
                - ALWAYS Use `struct` instead of class
                - NEVER use emojis in the answer.
                - ALWAYS Use `.at()` and `.insert_or_assign()` when working with sequential and associative containers
                - NEVER split method declaration and implementation
                - ALWAYS use `{}` when writing if/else/while etc. NEVER use syntax without curly braces.
          1:
            title_text:
              text: "AI\nPython"
              font_size: 28
            action:
              type: "type_text"
              text: |
                Use double quotes for strings, use type annotations. When writing a full python script add shebang for `#!/usr/bin/env python`. Use pathlib library for working with files. The project uses poetry for package management and the `pyproject.toml` for the configuration. 

                - Respond only with code requested in the question or needed to fix the issue. 
                - Do not add comments. 
                - Do not add description. 
                - Do not add example setup logic. 
                - Do not use emojis in the answer.
                - Do not write type definitions unless explicitly required to for the answer. 
                - Provide code only for the requested functionality. 
                - Use type annotations. 
                = Apply this requirement to all subsequent messages unless instructed otherwise. 
                - If there is no acceptable answer to the request, indicate this. 
                - Provide full implementation of the requested logic, do not skip logic with "todo" comments. 
                - When printing logs from the script, use logging module instead of `print()`
                - Use basic config `logging.basicConfig(level=logging.DEBUG, format="%(asctime)s - %(filename)s:%(lineno)d - %(levelname)s - %(message)s")` for logging.
                - When writing functions returning complex data (nested dictionaries, dictionaries nested in arrays, complex tuples), consider using data classes. 
                - Always use comparison operators going in the same direction, `<` and `<=`, never use `>` and `>=` compare operators
          2:
            title_text:
              text: "AI\nDiff"
              font_size: 28
            action:
              type: "type_text"
              text: |
                Respond only with the code necessary to implement the requested logic. Do not rewrite the whole code from scratch. Indicate where to insert new changes. 

          3:
            title_text:
              text: "AI\nRegular"
              font_size: 28
            action:
              type: "type_text"
              text: |
                You can respond to this question with both text and code. 

          9:
            action:
              type: "change_page"
              direction: "forward"
          8:
            action:
              type: "change_page"
              direction: "backward"

      - name: "Page 2"
        buttons:
          0:
            title_text:
              text: "Step\nOver"
              font_size: 28
            action:
              type: "emulate_shortcut"
              shortcut: "f10"
          1:
            title_text:
              text: "Step\nInto"
              font_size: 28
            action:
              type: "emulate_shortcut"
              shortcut: "f11"
          2:
            title_text:
              text: "Step\nOut"
              font_size: 28
            action:
              type: "emulate_shortcut"
              shortcut: "f12"

          9:
             action:
              type: "change_page"
              direction: "forward"
          8:
             action:
              type: "change_page"
              direction: "backward"
      - name: "Page 3"
        buttons:
          0:
            action:
              type: "execute_script"
              script: "positional_emacs_focus.py left-upper left"
            image_path: "~/defaultdirs/images/streamdeck/split_left_upper_left.png"
          1:
            action:
              type: "execute_script"
              script: "positional_emacs_focus.py left-upper right"
            image_path: "~/defaultdirs/images/streamdeck/split_left_upper_right.png"
          4:
            action:
              type: "execute_script"
              script: "positional_emacs_focus.py left-lower left"
            image_path: "~/defaultdirs/images/streamdeck/split_left_lower_left.png"
          5:
            action:
              type: "execute_script"
              script: "positional_emacs_focus.py left-lower right"
            image_path: "~/defaultdirs/images/streamdeck/split_left_lower_right.png"
          6:
            action:
              type: "execute_script"
              script: "positional_emacs_focus.py right left"
            image_path: "~/defaultdirs/images/streamdeck/split_right_left.png"
          7:
            action:
              type: "execute_script"
              script: "positional_emacs_focus.py right right"
            image_path: "~/defaultdirs/images/streamdeck/split_right_right.png"

          9:
             action:
              type: "change_page"
              direction: "forward"
          8:
             action:
              type: "change_page"
              direction: "backward"


  - device_type: "Stream Deck Original"
    pages:
      - name: "Main"
        buttons:
          0:
            action:
              type: "focus_window"
              text: "Qt Creator"
            image_path: "~/defaultdirs/images/streamdeck/Qt_logo_neon_2022.svg.png"
          1:
            action:
              type: "focus_window"
              text: "emacs"
            image_path: "~/defaultdirs/images/streamdeck/emacs_logo.jpg"
          2:
            action:
              type: "focus_window"
              text: "Chromium"
            image_path: "~/defaultdirs/images/streamdeck/Google_Chrome_icon_(February_2022).svg.png"
          3:
            action:
              type: "focus_window"
              text: "Firefox"
            image_path: "~/defaultdirs/images/streamdeck/firefox_logo.jpg"
          4:
            action:
              type: "focus_window"
              text: "Telegram"
            image_path: "~/defaultdirs/images/streamdeck/telegram_logo.jpg"
          5:
            action:
              type: "focus_window"
              text: "Visual Studio Code"
            image_path: "~/defaultdirs/images/streamdeck/code-stable.png"
          6:
            action:
              type: "focus_window"
              text: "kitty.kitty"
            image_path: "~/defaultdirs/images/streamdeck/kitty_termina.png"
          7:
            action:
              type: "execute_script"
              script: "gammaray"
            image_path: "~/defaultdirs/images/streamdeck/gammaray.png"
          11:
            action:
              type: "focus_window"
              text: "calibre"
            image_path: "~/defaultdirs/images/streamdeck/Calibre_logo_2.png"
          12:
            action:
              type: "focus_window"
              text: "msty"
            image_path: "~/defaultdirs/images/streamdeck/msty_logo.jpg"
          13:
            action:
              type: "focus_window"
              text: "doublecmd"
            image_path: "~/defaultdirs/images/streamdeck/doublecmd_logo.jpg"
          14:
            action:
              type: "focus_window"
              text: "okular"
            image_path: "~/defaultdirs/images/streamdeck/okular_log.png"
